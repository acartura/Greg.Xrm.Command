name: Release Pipeline v01

on:
  release:
    types:
      - created

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
    - name: Check Release Keyword in Description
      id: check_keyword
      run: |
        if (Select-String -Pattern 'Updated interfaces' -InputObject "${{ github.event.release.body }}") {
          echo "Release description contains the keyword 'Updated interfaces'."
          echo "::set-output name=contains_keyword::true"
        } else {
          echo "Release description does not contain the keyword 'Updated interfaces'."
          echo "::set-output name=contains_keyword::false"
        }

    - name: Download Artifact
      id: download_artifact
      if: steps.check_keyword.outputs.contains_keyword == 'true'
      run: |
        # Download the artifact with a wildcard for the version number
        nuget_package=$(find . -name "Greg.Xrm.Command.Interfaces.*.nupkg" -type f)
        echo "Downloaded NuGet package: $nuget_package"
        echo "::set-output name=nuget_package::$nuget_package"

    - name: Publish to NuGet
      if: steps.check_keyword.outputs.contains_keyword == 'true'
      run: |
        # Get the downloaded NuGet package path
        nuget_package_path=${{ steps.download_artifact.outputs.nuget_package }}
        
        # Push the NuGet package to NuGet.org
        nuget push $nuget_package_path -ApiKey ${{ secrets.NUGET_APIKEY }}